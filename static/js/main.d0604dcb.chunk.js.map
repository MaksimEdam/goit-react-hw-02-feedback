{"version":3,"sources":["Section/Section.jsx","FeedbackOptions/FeedbackOptions.jsx","Notification/Notification.jsx","Statistics/Statistics.jsx","App.js","index.js","FeedbackOptions/FeedBack.module.css"],"names":["Section","title","FeedbackOptions","options","onLeaveFeedback","map","option","type","name","onClick","className","s","button","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","App","state","props","initialGoog","initialNatural","initialBad","e","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","percentage","Math","round","this","objKey","Object","keys","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"oOAQeA,MARf,YAA6B,IAAVC,EAAS,EAATA,MACjB,OACE,mCACE,6BAAKA,O,gBCiBIC,MAlBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,mCACGD,EAAQE,KAAI,SAACC,GAAD,OACX,wBAEEC,KAAK,SACLC,KAAMF,EACNG,QAASL,EACTM,UAAWC,IAAEC,OALf,SAOGN,GANIA,SCCAO,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OACE,mCACE,4BAAIA,OCwBKC,MA3Bf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,oCACE,4CACA,+BACE,uCACO,+BAAOJ,OAEd,0CACU,+BAAOC,OAEjB,sCACM,+BAAOC,OAEb,wCAEE,+BAAOC,OAET,oDAEE,iCAAOC,EAAP,kBCZJC,G,sNAMJC,MAAQ,CACNN,KAAM,EAAKO,MAAMC,YACjBP,QAAS,EAAKM,MAAME,eACpBP,IAAK,EAAKK,MAAMG,Y,EAElBtB,gBAAkB,SAACuB,GACjB,IAAMnB,EAAOmB,EAAEC,OAAOpB,KACtB,EAAKqB,UAAS,SAACC,GAAD,sBACXtB,EAAOsB,EAAUtB,GAAQ,O,EAG9BuB,mBAAqB,WAEnB,OADe,EAAKT,MAAMN,KAAO,EAAKM,MAAMJ,IAAM,EAAKI,MAAML,S,EAG/De,gCAAkC,WAChC,IAAMC,EAAgC,IAAlB,EAAKX,MAAMN,KAAc,EAAKe,qBAClD,OAAOG,KAAKC,MAAMF,I,4CAGpB,WACE,IAAMd,EAAQiB,KAAKL,qBACbM,EAASC,OAAOC,KAAKH,KAAKd,OAChC,OACE,gCACE,cAAC,EAAD,CAASrB,MAAM,0BACf,cAAC,EAAD,CACEE,QAASkC,EACTjC,gBAAiBgC,KAAKhC,kBAEvBe,GACC,cAAC,EAAD,CACEH,KAAMoB,KAAKd,MAAMN,KACjBC,QAASmB,KAAKd,MAAML,QACpBC,IAAKkB,KAAKd,MAAMJ,IAChBC,MAAOiB,KAAKL,qBACZX,mBAAoBgB,KAAKJ,qCAG3Bb,GAAS,cAAC,EAAD,CAAcL,QAAQ,6B,GA7CvB0B,cAAZnB,EACGoB,aAAe,CACpBjB,YAAa,EACbC,eAAgB,EAChBC,WAAY,GA+CDL,QCrDfqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,sCCT1BC,EAAOC,QAAU,CAAC,OAAS,4B","file":"static/js/main.d0604dcb.chunk.js","sourcesContent":["function Section({ title }) {\r\n  return (\r\n    <>\r\n      <h1>{title}</h1>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Section;\r\n","import s from \"./FeedBack.module.css\";\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <>\r\n      {options.map((option) => (\r\n        <button\r\n          key={option}\r\n          type=\"button\"\r\n          name={option}\r\n          onClick={onLeaveFeedback}\r\n          className={s.button}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FeedbackOptions;\r\n","function Notification({ message }) {\r\n  return (\r\n    <>\r\n      <p>{message}</p>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Notification;\r\n","function Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <section>\r\n      <h2>Statistics</h2>\r\n      <ul>\r\n        <li>\r\n          Good:<span>{good}</span>\r\n        </li>\r\n        <li>\r\n          Neutral:<span>{neutral}</span>\r\n        </li>\r\n        <li>\r\n          Bad:<span>{bad}</span>\r\n        </li>\r\n        <li>\r\n          Total:\r\n          <span>{total}</span>\r\n        </li>\r\n        <li>\r\n          Positive feedback:\r\n          <span>{positivePercentage} %</span>\r\n        </li>\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Statistics;\r\n","import { Component } from \"react\";\r\nimport Section from \"./Section\";\r\nimport FeedbackOptions from \"./FeedbackOptions\";\r\nimport Notification from \"./Notification\";\r\nimport Statistics from \"./Statistics\";\r\nimport \"modern-normalize/modern-normalize.css\";\r\nimport \"./index.css\";\r\n\r\nclass App extends Component {\r\n  static defaultProps = {\r\n    initialGoog: 0,\r\n    initialNatural: 0,\r\n    initialBad: 0,\r\n  };\r\n  state = {\r\n    good: this.props.initialGoog,\r\n    neutral: this.props.initialNatural,\r\n    bad: this.props.initialBad,\r\n  };\r\n  onLeaveFeedback = (e) => {\r\n    const name = e.target.name;\r\n    this.setState((prevState) => ({\r\n      [name]: prevState[name] + 1,\r\n    }));\r\n  };\r\n  countTotalFeedback = () => {\r\n    const result = this.state.good + this.state.bad + this.state.neutral;\r\n    return result;\r\n  };\r\n  countPositiveFeedbackPercentage = () => {\r\n    const percentage = (this.state.good * 100) / this.countTotalFeedback();\r\n    return Math.round(percentage);\r\n  };\r\n\r\n  render() {\r\n    const total = this.countTotalFeedback();\r\n    const objKey = Object.keys(this.state);\r\n    return (\r\n      <div>\r\n        <Section title=\"Please leave feedback\"></Section>\r\n        <FeedbackOptions\r\n          options={objKey}\r\n          onLeaveFeedback={this.onLeaveFeedback}\r\n        />\r\n        {total && (\r\n          <Statistics\r\n            good={this.state.good}\r\n            neutral={this.state.neutral}\r\n            bad={this.state.bad}\r\n            total={this.countTotalFeedback()}\r\n            positivePercentage={this.countPositiveFeedbackPercentage()}\r\n          />\r\n        )}\r\n        {!total && <Notification message=\"No feedback given\" />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedBack_button__3JDgE\"};"],"sourceRoot":""}